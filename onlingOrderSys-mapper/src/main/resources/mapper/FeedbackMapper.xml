<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huat.bs.dao.FeedbackMapper">
  <resultMap id="BaseResultMap" type="com.huat.bs.bean.Feedback">
    <id column="fid" jdbcType="VARCHAR" property="fid" />
    <result column="userid" jdbcType="VARCHAR" property="userid" />
    <result column="userphone" jdbcType="VARCHAR" property="userphone" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.huat.bs.bean.Feedback">
    <result column="substance" jdbcType="LONGVARCHAR" property="substance" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    fid, userid, userphone, createtime
  </sql>
  <sql id="Blob_Column_List">
    substance
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.huat.bs.bean.FeedbackExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.huat.bs.bean.FeedbackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from feedback
    where fid = #{fid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from feedback
    where fid = #{fid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.huat.bs.bean.FeedbackExample">
    delete from feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huat.bs.bean.Feedback">
    insert into feedback (fid, userid, userphone, 
      createtime, substance)
    values (#{fid,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{userphone,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{substance,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.huat.bs.bean.Feedback">
    insert into feedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        fid,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="userphone != null">
        userphone,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="substance != null">
        substance,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        #{fid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="userphone != null">
        #{userphone,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="substance != null">
        #{substance,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.huat.bs.bean.FeedbackExample" resultType="java.lang.Long">
    select count(*) from feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update feedback
    <set>
      <if test="record.fid != null">
        fid = #{record.fid,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.userphone != null">
        userphone = #{record.userphone,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.substance != null">
        substance = #{record.substance,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update feedback
    set fid = #{record.fid,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=VARCHAR},
      userphone = #{record.userphone,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      substance = #{record.substance,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update feedback
    set fid = #{record.fid,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=VARCHAR},
      userphone = #{record.userphone,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huat.bs.bean.Feedback">
    update feedback
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="userphone != null">
        userphone = #{userphone,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="substance != null">
        substance = #{substance,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where fid = #{fid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.huat.bs.bean.Feedback">
    update feedback
    set userid = #{userid,jdbcType=VARCHAR},
      userphone = #{userphone,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      substance = #{substance,jdbcType=LONGVARCHAR}
    where fid = #{fid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huat.bs.bean.Feedback">
    update feedback
    set userid = #{userid,jdbcType=VARCHAR},
      userphone = #{userphone,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where fid = #{fid,jdbcType=VARCHAR}
  </update>
</mapper>