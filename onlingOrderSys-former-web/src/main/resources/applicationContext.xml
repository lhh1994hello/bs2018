<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!-- 引入数据库配置参数文件 -->
	<context:property-placeholder location="classpath:*.properties"/>
	<!-- 扫描注解，除了Controller -->
	<context:component-scan base-package="com.huat">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- C3P0：配置数据源 -->
	<!-- <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		C3P0
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean> -->
	
	<!-- Druid数据库连接池 -->
	<bean id="pooledDataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="url" value="${alibaba.jdbc.url}"></property>
		<property name="driverClassName" value="${alibaba.jdbc.driverClassName}"></property>
		<property name="username" value="${alibaba.jdbc.username}"></property>
		<property name="password" value="${alibaba.jdbc.password}"></property>	
		<property name = "filters" value = "${alibaba.jdbc.filters}" />  
		
		<property name = "logAbandoned" value = "${alibaba.jdbc.logAbandoned}" /> 
		<property name = "initialSize" value = "${alibaba.jdbc.initialSize}" /> 
		<property name = "maxActive" value = "${alibaba.jdbc.maxActive}" /> 
		<property name = "timeBetweenEvictionRunsMillis" value = "${alibaba.jdbc.timeBetweenEvictionRunsMillis}" />
	</bean>
	<!-- 配置sqlSession -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatisConfigure.xml"></property>
		<property name="dataSource" ref="pooledDataSource"></property>
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.huat.bs.dao"></property>
	</bean>
	<!-- 配置一个可以执行批量的sqlSession -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
		<constructor-arg name="executorType" value="BATCH"></constructor-arg>
	</bean>


	<!-- 事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>
	<aop:config>
		<!-- 第一个* 代表方法返回值类型，为所有，如public -->
		<!-- 这个包下得所有类的所有方法，都添加事务 -->
		<aop:pointcut expression="execution(* com.huat.bs.service..*(..))"
			id="txPoint" />
		<!-- 配置事务增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint" />
	</aop:config>
	<!-- 配置事务增强，就是事务如何切入，设置规则 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="find" read-only="true" />
			<tx:method name="get" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<!-- ******************************************************************************************* -->
	<bean id="orderService1" class="com.huat.bs.service.OrderService"></bean>
	
	<!-- ********************************************************************************************** -->
	<!-- <import resource="classpath:spring-redis.xml"/> -->
</beans>